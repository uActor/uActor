variables:
  GIT_SUBMODULE_STRATEGY: recursive
stages:
  - build
  - lint

cache:
  key: ${CI_JOB_NAME}
  paths:
    - conan/

variables:
  DEBIAN_FRONTEND: noninteractive

lint:
  before_script:
    - apt update -y && apt upgrade -y && apt install -y git ssh-client build-essential cmake ninja-build python3 python3-pip clang-tidy && pip3 install conan cpplint
  stage: lint
  image: ubuntu:20.04
  script: CONAN_USER_HOME=$PWD/conan make lint

build_linux_x64:
  before_script:
    - apt-get update -y && apt-get upgrade -y && apt-get install -y git ssh-client build-essential cmake ninja-build python3-pip && pip3 install conan
  stage: build
  image: ubuntu:20.04
  script: CONAN_USER_HOME=$PWD/conan make

build_esp32:
  stage: build
  image: espressif/idf:release-v4.2
  script: make build_esp32

build_armv7:
  before_script:
    - apt-get update -y && apt-get upgrade -y && apt-get install -y git ssh-client build-essential cmake ninja-build python3-pip crossbuild-essential-armhf g++-8-arm-linux-gnueabihf && pip3 install conan
  stage: build
  image: debian:buster
  script: CONAN_USER_HOME=$PWD/conan make build_armv7
  artifacts:
    paths:
      - build/arm_v7/release/uActorBin
    expire_in: 1 week